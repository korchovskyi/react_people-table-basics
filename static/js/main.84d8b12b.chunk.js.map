{"version":3,"sources":["components/CustomNavLink.tsx","components/Navbar.tsx","Pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","Pages/PeoplePage.tsx","Pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["CustomNavLink","memo","to","text","className","isActive","cn","Navbar","role","HomePage","Loader","PersonLink","person","isWoman","sex","slug","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useEffect","fetchPeople","peopleWithParents","find","f","m","length","NotFoundPage","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.84d8b12b.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport { NavLink, To } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  to: To,\n  text: string,\n}\n\nexport const CustomNavLink: FC<Props> = memo(({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => {\n      return cn('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      });\n    }}\n    to={to}\n  >\n    {text}\n  </NavLink>\n));\n","import { FC } from 'react';\nimport { CustomNavLink } from './CustomNavLink';\n\nexport const Navbar: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <CustomNavLink to=\"/\" text=\"Home\" />\n\n          <CustomNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </div>\n  );\n};\n","import { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: FC<Props> = memo(({ person }) => {\n  const isWoman = person.sex === 'f';\n\n  return (\n\n    <Link\n      to={person.slug}\n      className={cn({ 'has-text-danger': isWoman })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import { FC, memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = memo(({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { memo, useState, useEffect } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage:React.FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getPeople();\n\n        const peopleWithParents = response.map(person => {\n          const father = response.find(f => f.name === person.fatherName);\n          const mother = response.find(m => m.name === person.motherName);\n\n          return (\n            {\n              ...person,\n              father,\n              mother,\n            }\n          );\n        });\n\n        setPeople(peopleWithParents);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading && <Loader />}\n\n            {error && (\n              <p\n                data-cy=\"peopleLoadingError\"\n                className=\"has-text-danger\"\n              >\n                Something went wrong\n              </p>\n            )}\n\n            {!isLoading && !error && people.length === 0 && (\n              <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n            )}\n\n            {people.length > 0 && (\n              <PeopleTable people={people} />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </div>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}